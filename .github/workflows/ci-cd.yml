name: CI/CD Pipeline

on:
  push:
    branches-ignore:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository (use the latest version)
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Docker Buildx (use the latest version)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Google Cloud (use the latest version)
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

    # Set up Google Cloud SDK
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCLOUD_PROJECT }}

    # Set environment variable for Firebase Admin SDK
    - name: Set environment variable for Firebase
      run: echo "FIREBASE_ADMIN_SDK=${{ secrets.FIREBASE_ADMIN_SDK }}" >> $GITHUB_ENV

    # Build the Docker image
    - name: Build Docker Image
      run: |
        docker build -t gcr.io/${{ secrets.GCLOUD_PROJECT }}/nestjs-api:$GITHUB_SHA .
      
    # Push Docker image to Google Container Registry
    - name: Push to Google Container Registry
      run: |
        docker push gcr.io/${{ secrets.GCLOUD_PROJECT }}/nestjs-api:$GITHUB_SHA

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

    # Set up Google Cloud SDK (use the latest version)
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCLOUD_PROJECT }}

    # Deploy to Google Cloud Run
    - name: Deploy to Google Cloud Run
      run: |
        gcloud run deploy nestjs-api \
        --image=gcr.io/${{ secrets.GCLOUD_PROJECT }}/nestjs-api:$GITHUB_SHA \
        --region=${{ secrets.GCLOUD_COMPUTE_ZONE }} \
        --platform managed \
        --allow-unauthenticated
